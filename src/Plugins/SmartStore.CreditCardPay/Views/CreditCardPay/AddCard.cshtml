@model SmartStore.CreditCardPay.Models.PaymentMethodInfo

@{


    Layout = "_MyAccount";

}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript" src="https://api2.heartlandportico.com/SecureSubmit.v1/token/2.1/securesubmit.js"></script>
<link href="http://maxcdn.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" rel="stylesheet">

@*@using (Html.BeginForm())
    {
        var dataDictAddress = new ViewDataDictionary();
        dataDictAddress["breakpoint"] = "lg";
        //Merge ModelState (required for validation)
        dataDictAddress.ModelState.Merge(ViewData.ModelState);
        dataDictAddress.TemplateInfo.HtmlFieldPrefix = "Address";
        Html.RenderPartial("_CreateOrUpdateAddress", Model.Address, dataDictAddress);


    }*@
<style>
    .lablebottom
    {
         padding-top:55px;
    }
</style>
<form id="payment_form" action="@Url.Action("SaveCard")">
    <div class="form-horizontal">
        @*<div class="form-group row">
            <label class="col-lg-3 col-form-label">Card Holder Name</label>
            <div class="col-lg-9">
               
                <input type="text" name="CardHolderName" class="form-control" id="heartland-field"/>

            </div>
        </div>*@
        <div class="form-group row">
            <label class="col-lg-3 col-form-label">Card Alias</label>
            <div class="col-lg-9">
                
                <input type="text" name="CardAlias" class="form-control" id="heartland-field"/>

            </div>
        </div>
        <div><hr /></div>
        <div class="form-group row">
            <div class="col-lg-3  lablebottom required">
                <label for="iframesCardNumber">Card Number:</label>

            </div>
            <div class="col-lg-9">

                <div id="iframesCardNumber"></div>
            </div>
        </div>
        <div class="form-group row">
            <label class="col-lg-3 col-form-label required" for="iframesCardExpiration">Card Expiration:</label>
            <div class="col-lg-9">

                <div id="iframesCardExpiration"></div>
            </div>
        </div>
        <div class="form-group row">
            <label for="iframesCardCvv" class="col-lg-3 col-form-label required">Card CVV:</label>
            <div class="col-lg-9">

                <div id="iframesCardCvv"></div>
            </div>
        </div>
        <div class="form-group row">
            <div class="iframeholder" id="iframestoken"></div>
        </div>
        <div class="form-group row">

            <div class="col">
                <div class="row" style="margin-top: 30px;">
                    <div class="col-md-3">
                    </div>
                    <div class="col-md-3 ">
                        <div id="iframesSubmit"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
   
    

  

    
</form>

<script type="text/javascript">
    (function (document, Heartland) {
        // Create a new `HPS` object with the necessary configuration
        var hps = new Heartland.HPS({
           // publicKey: 'pkapi_cert_vq6QBsTXjYJyyemapL',
            publicKey:'@ViewBag.PublicKey',
            type: 'iframe',
            // Configure the iframe fields to tell the library where
            // the iframe should be inserted into the DOM and some
            // basic options
            fields: {
                cardNumber: {
                    target: 'iframesCardNumber',
                    placeholder: '•••• •••• •••• ••••'
                },
                cardExpiration: {
                    target: 'iframesCardExpiration',
                    placeholder: 'MM / YYYY'
                },
                cardCvv: {
                    target: 'iframesCardCvv',
                    placeholder: 'CVV'
                },
                submit: {
                    target: 'iframesSubmit'
                }
            },
            // Collection of CSS to inject into the iframes.
            // These properties can match the site's styles
            // to create a seamless experience.
        
            // Callback when a token is received from the service
            onTokenSuccess: function (resp) {
                // create field and append to form
                $("<input>").attr({ type: "hidden", id: "Token_value", name: "Token_value", value: resp.token_value }).appendTo("#iframestoken");
                // unbind event handler
                $("#payment_form").unbind('submit');
                // submit the form
                $("#payment_form").submit();
            },
            // Callback when an error is received from the service
            onTokenError: function (resp) {
                alert('There was an error: ' + resp.error.message);
            },
            // Callback when an event is fired within an iFrame
            onEvent: function (ev) {
                console.log(ev);
            }
        });

        // Attach a handler to interrupt the form submission
        Heartland.Events.addHandler(document.getElementById('iframes'), 'submit', function (e) {
            // Prevent the form from continuing to the `action` address
            e.preventDefault();
            // Tell the iframes to tokenize the data
            hps.Messages.post(
                {
                    accumulateData: true,
                    action: 'tokenize',
                    message: '@ViewBag.PublicKey'
                   
                },
                'cardNumber'
            );
        });
    }(document, Heartland));

    $(document).ready(function () {
        alert("fhdgfhdgh");
    });
</script>