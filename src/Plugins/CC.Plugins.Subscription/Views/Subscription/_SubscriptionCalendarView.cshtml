@using CC.Plugins.Subscription.Models
@model SubscriptionCalendarView
@{
    ViewBag.Title = "_SubscriptionCalendar";
}

@if (Model == null)
{
    return;
}
<script>
    function bindScheduler(id, date, events) {
        console.log(id);
        console.log(date);
        console.log(events[0]);
        $("#" + id).kendoScheduler({
            date: date,
            views: [
                {
                    type: "month",
                    eventsPerDay: 2

                }
            ],
            dataSource: events[0],

            dataBound: function (e) {
                $("td.k-other-month span").hide();
                $("span.k-link").removeClass('k-link');
                $("span.k-nav-day").removeClass('k-nav-day');
                $("span.k-event-actions").remove();

                var data = e.sender.dataSource.data();
                console.log(data);
                // var currentMonth = e.sender.view()._firstDayOfMonth.getMonthdate
                var mydate = new Date(date);
                var currentMonth = mydate.getMonth();
                var currentYear = mydate.getFullYear();
                var event;
                var eventElement;               
                debugger;
                $(`#${id} .subscription-calendar-summary`).remove();
                var parentDiv = document.createElement('div');
                parentDiv.classList.add('subscription-calendar-summary');
                
                for (var i = 0; i < data.length; i++) {
                    event = data[i];
                    eventElement = $("div.k-scheduler-content div[data-uid='" + event.uid + "']");

                    if (event.start.getMonth() !== currentMonth) {
                          $("div.k-scheduler-content div[data-uid='" + event.uid + "']").hide();
                    }

                    setEventsColor(event.title, eventElement)
                   
                    
                   /* if (data.length > 1 && numberofEventsInMonth < data.length-1) {
                        var currentPos = $(eventElement).css('top');
                        var newPos = `${parseInt(currentPos, 10) - 4}px`;
                        $(eventElement).css({ top: newPos});
                    }*/

                    

                    if (event.start.getMonth() === currentMonth && currentYear === event.start.getFullYear()) {   
                        var chirldDiv = document.createElement('div');
                        chirldDiv.classList.add('calendar-summary-content');
                        var str = event.title + " Level " + event.level + " -Total: " + "$" + event.total
                        chirldDiv.textContent = str;
                        parentDiv.appendChild(chirldDiv);                       
                        
                    }
                    $(`#${id} .k-scheduler-toolbar`).append(parentDiv);
                    $(eventElement).find(".k-event-template").text(event.title + " Level " + event.level + " $" + event.total);
                    
                }
            }

        });

        var scheduler = $("#" + id).data("kendoScheduler");        
    }

    function RemoveLastDuplicateCalendarRow(id) {

        var trElements = $('#' + id).find('div.k-scheduler-content tr');

        var count = trElements.length;

        for (var i = count - 1; i > 0; i--) {
          
            var trElement = trElements[i];
            var elements = $(trElement).find('.k-other-month');

            if (elements.length >= 5) {
                $(trElement).addClass('common-hide-element');
            }
            else
                break;
        }

    }

    function removeUnusedButton() {
        $("div.k-scheduler-toolbar .k-nav-today").remove();

        $("div.k-scheduler-toolbar .k-nav-prev").remove();
        $("div.k-scheduler-toolbar .k-nav-next").remove();
        $("div.k-scheduler-toolbar .k-i-calendar").remove();
        $("div.k-scheduler-toolbar .k-scheduler-refresh").remove();
        $("div.k-scheduler-content .k-more-events").remove();
        $("div.k-scheduler-content .k-more-events").remove();
        //  $(".k-scheduler").find("td.k-other-month").removeClass("k-other-month");
    }

    function RemoveFirstDuplicateCalendarRow(id) {

        var trElements = $('#' + id).find('div.k-scheduler-content tr');

        var count = trElements.length;

        for (var i = 0; i < count; i++) {
            var trElement = trElements[i];
            var elements = $(trElement).find('.k-other-month');

            if (elements.length >= 5) {
                $(trElement).addClass('common-hide-element');
                var scheduler = $('#' + id).data("kendoScheduler");
                scheduler.refresh();
                // setColor();
            }
            else
                break;
        }


    }

    
        
    function setEventsColor(title, element) {

        if (title == 'P2N') {
            $(element).find(".k-event-template").addClass('pantone2925');
        }
        else if (title == 'N2B') {
            $(element).find(".k-event-template").addClass('pantone2294');
        }//N2B B2G
        else if (title == 'B2G') {
            $(element).find(".k-event-template").addClass('pantone1505');
        }

    }

</script>
@{

    var startDate = Model.MonthRange.FirstOrDefault();
    foreach (var month in Model.MonthRange)
    // for (int month = startMonth; month <= endMonth; month++)
    {
        <div class="row">
            <div class="col">
                <div id='@(month.Ticks)'></div>
            </div>
            
        </div>
        <script>
            var stringList = [@(Html.Raw(Json.Encode(this.Model.Events)))];
            bindScheduler('@(month.Ticks)', '@month', stringList);
            $(document).ready(function () {             

                if ('@(month > startDate)'=='True') {
                    $("#" + '@(month.Ticks)').addClass('not-first-calendar');
                }
          
                removeUnusedButton();
                RemoveLastDuplicateCalendarRow('@(month.Ticks)');
                RemoveFirstDuplicateCalendarRow('@(month.Ticks)')
            });
        </script>

    }
}

