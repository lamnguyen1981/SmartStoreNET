@using CC.Plugins.Subscription.Models
@model SubscriptionCalendarView
@{
    ViewBag.Title = "_SubscriptionCalendar";
}

@if (Model == null )
    {
    return;
    }
<script>
    function bindScheduler(id, date, events) {
        console.log(id);
        console.log(date);
        console.log(events[0]);
        $("#" + id).kendoScheduler({
            date: date,

            views: [
                {
                    type: "month"
                   
                }
            ],
            dataSource: events[0]

        });

        var scheduler = $("#" + id).data("kendoScheduler");
        // scheduler.view("month");
    }

    function RemoveLastDuplicateCalendarRow(id) {

        var trElements = $('#' + id).find('div.k-scheduler-content tr');

        var count = trElements.length;

        for (var i = count - 1; i > 0; i--) {
            // var trElement = $('#' + id + " div.k-scheduler-content > tr:nth-child(" + i + ")");
            var trElement = trElements[i];
            var elements = $(trElement).find('.k-other-month');

            if (elements.length > 0) {
                $(trElement).addClass('common-hide-element');
            }
            else
                break;
        }

    }

    function removeUnusedButton() {
        $("div.k-scheduler-toolbar .k-nav-today").remove();
        $("div.k-scheduler-toolbar .k-nav-prev").remove();
        $("div.k-scheduler-toolbar .k-nav-next").remove();
        $("div.k-scheduler-toolbar .k-i-calendar").remove();
        $("div.k-scheduler-toolbar .k-scheduler-refresh").remove();
        $("div.k-scheduler-content .k-more-events").remove();
        $("div.k-scheduler-content .k-more-events").remove();
      //  $(".k-scheduler").find("td.k-other-month").removeClass("k-other-month");
    }

    function RemoveFirstDuplicateCalendarRow(id) {


        var trElements = $('#' + id).find('div.k-scheduler-content tr');

        var count = trElements.length;

        for (var i = 0; i < count; i++) {
            //  var trElement = $('#' + id + " div.k-scheduler-content > tr:nth-child(" + i + ")");
            var trElement = trElements[i];
            var elements = $(trElement).find('.k-other-month');

            if (elements.length == 7) {
                $(trElement).addClass('common-hide-element');
            }
            else
                break;
        }


    }

    $(document).ready(function () {

       


    });

    function setColor() {
        $('.k-event-template').each(function () {
          
            if ($(this).get(0).innerText == 'P2N') {
                $(this).addClass('pantone2925');
            }
            else if ($(this).get(0).innerText == 'N2B') {
                $(this).addClass('pantone2294');
            }//N2B B2G
            else if ($(this).get(0).innerText == 'B2G') {
                $(this).addClass('pantone1505');
            }
        });
    }
</script>
@{
    var count = 0;
    var startMonth = Model.StartDate.Month;
    var endMonth = Model.EndDate.Month;
    var year = Model.StartDate.Year;
    var startDate = Model.MonthRange.First();
    foreach (var month in Model.MonthRange)
    // for (int month = startMonth; month <= endMonth; month++)
    {

       // var dateValue = new DateTime(year, month, 1);
        <div id='@(month.Ticks)'></div>
        <script>
            var stringList = [@(Html.Raw(Json.Encode(this.Model.Events)))];
            bindScheduler('@(month.Ticks)', '@month', stringList);
            console.log('Mylog');
            console.log('@(month)');
            console.log('@(month.Ticks)');
            $(document).ready(function () {
               // var stringList = [@(Html.Raw(Json.Encode(this.Model.Events)))];
               // console.log(stringList);




                if ('@(month > startDate)'=='True') {
                    $("#" + '@(month.Ticks)').addClass('not-first-calendar');
                }
                setColor();
                removeUnusedButton();
            });
        </script>
       
    }
}

